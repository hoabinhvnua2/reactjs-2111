{"ast":null,"code":"var _jsxFileName = \"/Users/binhtran/Code/t3h/reactjs-2111/GV-Binh/day-19/src/context/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initState = {\n  count: 10\n};\nconst CountContext = /*#__PURE__*/createContext();\n\nconst reduce = (state, action) => {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case \"INCREMENT\":\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case \"DECREMENT\":\n      return { ...state,\n        count: state.count - 1\n      };\n\n    default:\n      break;\n  }\n};\n\nconst ProviderCustom = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reduce, initState);\n  return /*#__PURE__*/_jsxDEV(CountContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProviderCustom, \"ivzsx5aR9qRFuEtyOcndflQiQ1Q=\");\n\n_c = ProviderCustom;\nexport { ProviderCustom, CountContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderCustom\");","map":{"version":3,"sources":["/Users/binhtran/Code/t3h/reactjs-2111/GV-Binh/day-19/src/context/index.jsx"],"names":["React","createContext","useReducer","initState","count","CountContext","reduce","state","action","type","ProviderCustom","children","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AADS,CAAlB;AAIA,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAEA,MAAMK,MAAM,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,QAAM;AAACC,IAAAA;AAAD,MAASD,MAAf;;AAEA,UAAQC,IAAR;AACI,SAAK,WAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAhC,OAAP;;AACJ,SAAK,WAAL;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAWH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAhC,OAAP;;AAEJ;AACI;AAPR;AASH,CAZD;;AAcA,MAAMM,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAErC,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBV,UAAU,CAACI,MAAD,EAASH,SAAT,CAApC;AACF,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAD;AAAQK,MAAAA;AAAR,KAA9B;AAAA,cAAkDD;AAAlD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAND;;GAAMD,c;;KAAAA,c;AASN,SACIA,cADJ,EAEIL,YAFJ","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst initState = {\n  count: 10,\n};\n\nconst CountContext = createContext();\n\nconst reduce = (state, action) => {\n    const {type} = action;\n\n    switch (type) {\n        case \"INCREMENT\":\n            return {...state, count: state.count + 1}\n        case \"DECREMENT\":\n            return {...state, count: state.count - 1}\n    \n        default:\n            break;\n    }\n}\n\nconst ProviderCustom = ({ children }) => {\n\n    const [state, dispatch] = useReducer(reduce, initState);\n  return (\n    <CountContext.Provider value={{state, dispatch}}>{children}</CountContext.Provider>\n  );\n};\n\n\nexport {\n    ProviderCustom,\n    CountContext\n}"]},"metadata":{},"sourceType":"module"}